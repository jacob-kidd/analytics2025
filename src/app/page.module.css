@import url('https://fonts.googleapis.com/css2?family=Belleza&display=swap');

.MainDiv {
    background: #0b233b;
    color: #bd9748;
    padding: 5px 40px;
    padding-bottom: 50px;
    min-height: calc(100vh - 45px);
    font-family: "Belleza", sans-serif;
    justify-items: center;
}

.MatchInfo {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-evenly;
    gap: 5px;
    width: 350px;
    align-self: center;
  }
.allMatchInfo {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  align-content: center;
}
.Endgame {
  justify-items: center;
}
.Coral {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.L1,.L2,.L3,.L4 {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    text-align: center;
}

.Table {
  flex-direction: column;
  justify-content: center;
}

.Table td {
  text-align: center; 
  padding-right: 19px; 
  position: relative; 
}

.Table td h2 {
  padding-bottom: 15px;
  position: absolute; 
  right: 0px;
  bottom: 15px;
  margin: 0px;
}

.Table th {
  padding-right: 19px;
}

.AlgaeRemoved {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.Processor {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.Net {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.HumanPlayer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.MainDiv h2 {
  text-align: center;
}

.HBox {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 20px;
    width: 100%;
    justify-content: center;
  }

  .HBox input {
    width: 60px;
  }
  .MainDiv button[type=submit] {
    background-color: #bd9748;
    height: 50px;
    width: 300px;
    border-radius: 5px;
    border: 1px solid #ffa200;
    font-size: 30px;
    left: 50%;
    position: relative;
    transform: translateX(-50%);
  }

  .MainDiv button[type=submit]:hover {
    background-color: #fcec91;
  }
  
  .MainDiv button, .MainDiv input {
    font-family: 'Belleza', sans-serif;
  }

  .MainDiv label {
    font-size: 25px;
  }

  .Qual {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    flex-wrap: wrap;
    gap: 10px;
  }

  .MainDiv input[type=checkbox] {
    justify-content: center;
  }

span.subsubheading {
  display: block;
  text-align: center;
  font-size: 25px;
}

hr.subsubheading {
  margin: 0px 20px;
  background-color: #bd9748;
}

.Intake {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  background-color:#bd9748;
  color: black;
  border-radius: 8px;
  align-items: center;
  padding: 3px;
  width: 250px;
  height: 375px;
  justify-self: center;
  margin: 15px;
  gap: -5px;
}

.MainDiv input:focus,
.MainDiv textarea:focus {
    border-color: rgb(87, 171, 254);
    outline: none;
}
.MainDiv input:focus:invalid,
.MainDiv textarea:focus:invalid {
    border-color: rgb(184, 0, 0);
}


.QRCodeRow {
  display: flex;
  gap: 20px;
  justify-content: center;
  flex-wrap: wrap;
  margin: 20px 0;
}

.QRCodeImage {
  width: 400px;
  height: 400px;
  border: 2px solid #bd9748;
  border-radius: 10px;
}

@media (max-width: 900px) {
  .QRCodeRow {
    flex-direction: column;
  }
}


.viewToggle {
  display: flex;
  gap: 20px;
  margin: 30px 0;
  justify-content: center;
}

.toggleButton {
  padding: 15px 40px;
  border: 3px solid #FFC107; /* Yellow border */
  background: transparent;
  color: #FFA000; /* Darker yellow for text */
  cursor: pointer;
  border-radius: 30px;
  transition: all 0.3s ease;
  font-size: 1.2rem;
  font-weight: 500;
  min-width: 160px;
}

.toggleButton.active {
  background: #FFC107; /* Yellow background */
  color: #000; /* Black text for contrast */
  transform: scale(1.05);
  box-shadow: 0 2px 8px rgba(255, 193, 7, 0.3); /* Yellow shadow */
}

.toggleButton:not(.active):hover {
  background: rgba(255, 193, 7, 0.1); /* Light yellow hover */
  transform: scale(1.03);
  color: #FFC107; /* Brighter yellow text on hover */
}

/* Centered elements */
.TeamHeader {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  margin: 20px 0;
}


/* Team section styling */
.TeamSection {
  margin: 30px 0;
  padding: 20px;
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
}

.Qual {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
  margin: 20px 0;
}

/* Form spacing adjustments */
.PostMatch {
  margin-top: 20px;
}

/* Alliance Toggle */
.configSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  margin: 20px 0;
}

.allianceToggle {
  display: flex;
  gap: 10px;
}

.allianceButton {
  padding: 10px 20px;
  border: 2px solid #666;
  border-radius: 5px;
  background: #bd9748;
  color: #888;
  cursor: pointer;
  transition: all 0.3s ease;
}

.allianceButton.active {
  color: rgb(255, 255, 255);
  border-color: currentColor;
  box-shadow: 0 0 8px currentColor;
}

.allianceButton[data-color="red"].active {
  color: #ff4444;
  border-color: currentColor;
  box-shadow: 0 0 8px currentColor;
}

.allianceButton[data-color="blue"].active {
  color: #4444ff;
  border-color: currentColor;
  box-shadow: 0 0 8px currentColor;
}

/* Team Section Styling */
.TeamSection {
  margin: 30px 0;
  padding: 20px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
}

.teamHeader {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  margin: 20px 0;
}

.centeredInput {
  width: 200px;
  margin: 0 auto;
}

.qualGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
  margin: 20px 0;
}

.commentSections {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.SubmitButton {
  margin-top: 30px;
}

@media (max-width: 768px) {
  .qualGrid {
    grid-template-columns: 1fr;
    gap: 15px;
  }
  
  .qualitativeSection {
    padding: 10px;
  }
  
  .Qualitative {
    min-width: 100%;
    margin: 0;
  }
}



/* ORIGINAL FORM PROTECTION */
:not(.qualPage) .Qual {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  flex-wrap: wrap;
  gap: 10px;
}

:not(.qualPage) .Qualitative {
  margin: 10px;
  min-width: 200px;
}